{"version":3,"sources":["圆周率计算-可设置圆周率位数-可选择线程个数-多线程大数框架webworker输出useragent大数框架/mythread1-bigint.js"],"names":["importScripts","addEventListener","event","bigInt","abs","n","mul","m","multiply","div","divide","add","__proto__","cmp","compare","piwei","data","threadall","threadid","console","log","p","a","h","x","fu","t","i","len","plus","postMessage","toString"],"mappings":"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","file":"mythread1-bigint.de0110ac.js","sourceRoot":"..","sourcesContent":["// (() => {\r\n//使用bigint测试\r\nimportScripts(\r\n  \"https://cdn.staticfile.org/big-integer/1.6.43/BigInteger.min.js\"\r\n);\r\n// ()=>{\r\n// console.log(\"加载完成\")}\r\n//   console.log(bigInt)\r\n// importScripts(\"./decimal.min.js\");\r\n// nabs.cmp=(m)=> nabs.compareAbs(m);\r\n/**\r\n   * \r\n   * https://github.com/peterolson/BigInteger.js\r\n   * \r\n   * BigInteger.js Build Status Coverage Status Monthly Downloads\r\nBigInteger.js is an arbitrary-length integer library for Javascript, allowing arithmetic operations on integers of unlimited size, notwithstanding memory and time limitations.\r\n\r\nUpdate (December 2, 2018): BigInt is being added as a native feature of JavaScript. This library now works as a polyfill: if the environment supports the native BigInt, this library acts as a thin wrapper over the native implementation.\r\n\r\nBigInteger.js构建状态覆盖状态每月下载\r\nBigInteger.js是Javascript的任意长度整数库，允许对无限大小的整数进行算术运算，尽管存在内存和时间限制。\r\n\r\n更新（2018年12月2日）：BigInt被添加为JavaScript的本机功能。 此库现在可用作polyfill：如果环境支持本机BigInt，则此库充当本机实现的瘦包装器。\r\n*/\r\n// setTimeout(mycalc,0)\r\n// function mycalc(){\r\n\r\naddEventListener(\"message\", function(event) {\r\n  bigInt.abs = n => bigInt(n).abs();\r\n\r\n  bigInt.mul = (n, m) => bigInt(n).multiply(m);\r\n\r\n  bigInt.div = (n, m) => bigInt(n).divide(m);\r\n  bigInt.add = (n, m) => bigInt(n).add(m);\r\n  //MAX_INT\r\n  //9007199254740992\r\n  bigInt().__proto__.cmp = bigInt().__proto__.compare;\r\n  bigInt().__proto__.div = bigInt().__proto__.divide;\r\n  bigInt().__proto__.mul = bigInt().__proto__.multiply;\r\n\r\n  bigInt(\"90071992547409920\").__proto__.cmp = bigInt(\r\n    \"90071992547409920\"\r\n  ).__proto__.compare;\r\n  bigInt(\"90071992547409920\").__proto__.div = bigInt(\r\n    \"90071992547409920\"\r\n  ).__proto__.divide;\r\n  bigInt(\"90071992547409920\").__proto__.mul = bigInt(\r\n    \"90071992547409920\"\r\n  ).__proto__.multiply;\r\n  // bigInt.cmp=bigInt.prototype.cmp=(n)=>;\r\n  var piwei;\r\n  piwei = event.data[0];\r\n  // piwei /= 2;\r\n  var threadall = event.data[1];\r\n  var threadid = event.data[2];\r\n  // console.log(\r\n  //   \"副线程\" + (threadid + 1) + \"从主线程接收\" + \"event.data\\n\",\r\n  //   ...event.data\r\n  // );\r\n  console.log(\"副线程\" + (threadid + 1) + \"从主线程接收\" + \"event.data\\n\");\r\n  console.log(...event.data);\r\n\r\n  // Decimal.precision = piwei + 1;\r\n  var p = new bigInt(0);\r\n  var a = new bigInt(1);\r\n  // var h = 1;\r\n  var h = new bigInt(\"1e\" + piwei);\r\n  // console.log(\"h\",h.toString())\r\n  var x = new bigInt(0);\r\n  var fu = 1;\r\n  var t = new bigInt(1);\r\n  for (var i = 0, len = threadid; i < len; i++) {\r\n    fu = -1 * fu;\r\n    a = bigInt.mul(a, 1024);\r\n    x = x.plus(1);\r\n  }\r\n  while (bigInt.abs(t).cmp(new bigInt(0)) >= 0) {\r\n    // console.log(\"t\",t.toString())\r\n    // console.log(\"a\",a.toString())\r\n    // console.log(\"x\",x.toString())\r\n    // console.log(\"p\",p.toString())\r\n    /**除法小于零的结果直接变成0,所以分母要特别大才能精确除法 */\r\n    t = bigInt\r\n      .mul(1, fu)\r\n      .mul(\r\n        bigInt\r\n          .div(h.mul(-(2 ** 5)), bigInt.mul(4, x).plus(1))\r\n          .plus(bigInt.div(h.mul(-1), bigInt.mul(4, x).plus(3)))\r\n          .plus(bigInt.div(h.mul(2 ** 8), bigInt.mul(10, x).plus(1)))\r\n          .plus(bigInt.div(h.mul(-(2 ** 6)), bigInt.mul(10, x).plus(3)))\r\n          .plus(bigInt.div(h.mul(-(2 ** 2)), bigInt.mul(10, x).plus(5)))\r\n          .plus(bigInt.div(h.mul(-(2 ** 2)), bigInt.mul(10, x).plus(7)))\r\n          .plus(bigInt.div(h.mul(1), bigInt.mul(10, x).plus(9)))\r\n      )\r\n      .div(bigInt.mul(2 ** 6, a));\r\n\r\n    p = bigInt.add(p, t);\r\n    if (bigInt.abs(t).cmp(new bigInt(0)) <= 0) break;\r\n\r\n    for (var i = 0, len = threadall; i < len; i++) {\r\n      fu = -1 * fu;\r\n      a = bigInt.mul(a, 1024);\r\n      x = x.plus(1);\r\n    }\r\n  }\r\n  // console.log(\"t\", t.toString())\r\n  // console.log(\"p\", p.toString())\r\n  postMessage([p.toString(), \"\" + x.plus(1)]);\r\n});\r\n// }\r\n// })();\r\n"]}