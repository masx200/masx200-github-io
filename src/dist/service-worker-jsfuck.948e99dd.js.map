{"version":3,"sources":["JSfuck-and-hieroglyphy-Decoder-and-ENCODER/jsfuck.js","JSfuck-and-hieroglyphy-Decoder-and-ENCODER/service-worker-jsfuck.js"],"names":["global","JSFuck","encode","exports","module","USE_CHAR_CODE","MIN","MAX","SIMPLE","false","true","undefined","NaN","Infinity","CONSTRUCTORS","Array","Number","String","Boolean","Function","RegExp","MAPPING","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","$","_","GLOBAL","fillMissingChars","key","charCodeAt","toString","replace","fillMissingDigits","output","number","substr","replaceMap","character","value","original","pattern","replacement","digitReplacer","numberReplacer","values","split","head","shift","concat","join","fromCharCode","replaceStrings","regEx","all","missing","count","findMissing","done","match","mappingReplacer","valueReplacer","error","console","haveinit","input","wrapWithEval","push","test","window","WorkerGlobalScope","mymessagehandler","data","log","postMessage","addEventListener"],"mappings":"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","file":"service-worker-jsfuck.948e99dd.js","sourceRoot":"..","sourcesContent":["/*! JSFuck 0.4.0 - http://jsfuck.com */\r\n(function(global) {\r\n  // console.log(global)\r\n  \"use strict\";\r\n  //   self = typeof exports === \"undefined\" ? window : exports;\r\n  //   self.JSFuck = {\r\n  //     encode: encode\r\n  //   };\r\n  // console.log(this)\r\n  global.JSFuck = {\r\n    encode: encode\r\n  };\r\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\r\n    // module.exports = mainExports;\r\n    module.exports = global.JSFuck;\r\n  }\r\n  var USE_CHAR_CODE = \"USE_CHAR_CODE\";\r\n\r\n  var MIN = 32,\r\n    MAX = 126;\r\n\r\n  var SIMPLE = {\r\n    false: \"![]\",\r\n    true: \"!![]\",\r\n    undefined: \"[][[]]\",\r\n    NaN: \"+[![]]\",\r\n    Infinity: \"+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]]+[+[]])\" // +\"1e1000\"\r\n  };\r\n\r\n  var CONSTRUCTORS = {\r\n    Array: \"[]\",\r\n    Number: \"(+[])\",\r\n    String: \"([]+[])\",\r\n    Boolean: \"(![])\",\r\n    Function: '[][\"filter\"]',\r\n    RegExp: 'Function(\"return/0/\")()'\r\n  };\r\n\r\n  var MAPPING = {\r\n    a: '(false+\"\")[1]',\r\n    b: '(+(11))[\"toString\"](20)',\r\n    c: '([][\"filter\"]+\"\")[3]',\r\n    d: '(undefined+\"\")[2]',\r\n    e: '(true+\"\")[3]',\r\n    f: '(false+\"\")[0]',\r\n    g: \"(+false+[false]+String)[20]\",\r\n    h: '(+(101))[\"toString\"](21)[1]',\r\n    i: \"([false]+undefined)[10]\",\r\n    j: '(+(40))[\"toString\"](21)[1]',\r\n    k: '(+(20))[\"toString\"](21)',\r\n    l: '(false+\"\")[2]',\r\n    m: '(Number+\"\")[11]',\r\n    n: '(undefined+\"\")[1]',\r\n    o: '(true+[][\"filter\"])[10]',\r\n    p: '(+(211))[\"toString\"](31)[1]',\r\n    q: '(+(212))[\"toString\"](31)[1]',\r\n    r: '(true+\"\")[1]',\r\n    s: '(false+\"\")[3]',\r\n    t: '(true+\"\")[0]',\r\n    u: '(undefined+\"\")[0]',\r\n    v: '(+(31))[\"toString\"](32)',\r\n    w: '(+(32))[\"toString\"](33)',\r\n    x: '(+(101))[\"toString\"](34)[1]',\r\n    y: \"(NaN+[Infinity])[10]\",\r\n    z: '(+(35))[\"toString\"](36)',\r\n\r\n    A: \"(+false+Array)[10]\",\r\n    B: \"(+false+Boolean)[10]\",\r\n    C: 'Function(\"return escape\")()(\"<\")[2]',\r\n    D: 'Function(\"return escape\")()(\"=\")[2]',\r\n    E: '(RegExp+\"\")[12]',\r\n    F: \"(+false+Function)[10]\",\r\n    G: '(false+Function(\"return Date\")()())[30]',\r\n    H: USE_CHAR_CODE,\r\n    I: '(Infinity+\"\")[0]',\r\n    J: USE_CHAR_CODE,\r\n    K: USE_CHAR_CODE,\r\n    L: USE_CHAR_CODE,\r\n    M: '(true+Function(\"return Date\")()())[30]',\r\n    N: '(NaN+\"\")[0]',\r\n    O: USE_CHAR_CODE,\r\n    P: USE_CHAR_CODE,\r\n    Q: USE_CHAR_CODE,\r\n    R: \"(+false+RegExp)[10]\",\r\n    S: \"(+false+String)[10]\",\r\n    T: '(NaN+Function(\"return Date\")()())[30]',\r\n    U: USE_CHAR_CODE,\r\n    V: USE_CHAR_CODE,\r\n    W: USE_CHAR_CODE,\r\n    X: USE_CHAR_CODE,\r\n    Y: USE_CHAR_CODE,\r\n    Z: USE_CHAR_CODE,\r\n\r\n    \" \": '(NaN+[][\"filter\"])[11]',\r\n    \"!\": USE_CHAR_CODE,\r\n    '\"': '(\"\")[\"fontcolor\"]()[12]',\r\n    \"#\": USE_CHAR_CODE,\r\n    $: USE_CHAR_CODE,\r\n    \"%\": 'Function(\"return escape\")()(\"<\")[0]',\r\n    \"&\": USE_CHAR_CODE,\r\n    \"'\": USE_CHAR_CODE,\r\n\r\n    \"(\": '(false+[][\"filter\"])[20]',\r\n    \")\": '(true+[][\"filter\"])[20]',\r\n    \"*\": USE_CHAR_CODE,\r\n    \"+\": \"(+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]])+[])[2]\",\r\n    \",\": '[[]][\"concat\"]([[]])+\"\"',\r\n    \"-\": '(+(.+[0000000001])+\"\")[2]',\r\n    \".\":\r\n      \"(+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]\",\r\n    \"/\": '(false+[+false])[\"italics\"]()[10]',\r\n    \":\": '(RegExp()+\"\")[3]',\r\n    \";\": USE_CHAR_CODE,\r\n    \"<\": '(\"\")[\"italics\"]()[0]',\r\n    \"=\": '(\"\")[\"fontcolor\"]()[11]',\r\n    \">\": '(\"\")[\"italics\"]()[2]',\r\n    \"?\": '(RegExp()+\"\")[2]',\r\n    \"@\": USE_CHAR_CODE,\r\n    \"[\": '(GLOBAL+\"\")[0]',\r\n    \"\\\\\": USE_CHAR_CODE,\r\n\r\n    //  '\\\\': `( [][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]))[0]`  ,\r\n\r\n    \"]\": USE_CHAR_CODE,\r\n    \"^\": USE_CHAR_CODE,\r\n    _: USE_CHAR_CODE,\r\n    \"`\": USE_CHAR_CODE,\r\n    \"{\": '(NaN+[][\"filter\"])[21]',\r\n    // '{': '([][\"filter\"]+[])[18]',\r\n    \"|\": USE_CHAR_CODE,\r\n    \"}\": USE_CHAR_CODE,\r\n    \"}\": '(NaN+[][\"filter\"])[37]',\r\n    \"~\": USE_CHAR_CODE\r\n  };\r\n\r\n  var GLOBAL = 'Function(\"return this\")()';\r\n\r\n  function fillMissingChars() {\r\n    // console.log(\"fillMissingChars\")\r\n    // console.log(MAPPING)\r\n    for (var key in MAPPING) {\r\n      // console.log(key,MAPPING[key])\r\n      if (MAPPING[key] === USE_CHAR_CODE) {\r\n        // console.log(key,MAPPING[key])\r\n\r\n        // if (key === '\\\\') {\r\n        MAPPING[key] =\r\n          'Function(\"return unescape\")()(\"%\"' +\r\n          key\r\n            .charCodeAt(0)\r\n            .toString(16)\r\n            .replace(/(\\d+)/g, '+($1)+\"') +\r\n          '\")';\r\n        // console.log(key,MAPPING[key],MAPPING[key].length)\r\n        //  MAPPING[key] ='( [][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+{})[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+{})[!+[]+!![]+!![]+!![]+!![]]))'\r\n        // } else {\r\n        //   MAPPING[key] = '(\\\\u00' + key.charCodeAt(0).toString(16) + ')';\r\n        // }\r\n        // console.log(key, MAPPING[key])\r\n        // MAPPING[key] = 'Function(\"return unescape\")()(\"%\"' + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\")';\r\n        // console.log(key, MAPPING[key])\r\n        // mykey1 = `(unescape(\"%` + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\"))';\r\n        // MAPPING[key] = mykey1\r\n        // // MAPPING[key] = \"\\\\u\"+ key.charCodeAt(0).toString(16);\r\n        // // MAPPING[key] =  'unescape(\"%'+key.charCodeAt(0).toString(16)+'\")'\r\n        // console.log(key, mykey1)\r\n        // mykey1=\"(\" + encode(\"\\\\u00\" + key.charCodeAt(0).toString(16)) + \")\"\r\n        // console.log(mykey1.length,MAPPING[key].length)\r\n      }\r\n      // console.log(key,MAPPING[key],MAPPING[key].length)\r\n    }\r\n\r\n    // console.log(MAPPING)\r\n  }\r\n\r\n  function fillMissingDigits() {\r\n    // console.log(\"fillMissingDigits\")\r\n    var output, number, i;\r\n\r\n    for (number = 0; number < 10; number++) {\r\n      output = \"+[]\";\r\n\r\n      if (number > 0) {\r\n        output = \"+!\" + output;\r\n      }\r\n      for (i = 1; i < number; i++) {\r\n        output = \"+!+[]\" + output;\r\n      }\r\n      if (number > 1) {\r\n        output = output.substr(1);\r\n      }\r\n\r\n      MAPPING[number] = \"[\" + output + \"]\";\r\n      // console.log(number,MAPPING[number])\r\n    }\r\n  }\r\n\r\n  function replaceMap() {\r\n    // console.log(\"replaceMap\")\r\n    var character = \"\",\r\n      value,\r\n      original,\r\n      i,\r\n      key;\r\n\r\n    function replace(pattern, replacement) {\r\n      value = value.replace(new RegExp(pattern, \"gi\"), replacement);\r\n    }\r\n\r\n    function digitReplacer(_, x) {\r\n      return MAPPING[x];\r\n    }\r\n\r\n    function numberReplacer(_, y) {\r\n      var values = y.split(\"\");\r\n      var head = +values.shift();\r\n      var output = \"+[]\";\r\n\r\n      if (head > 0) {\r\n        output = \"+!\" + output;\r\n      }\r\n      for (i = 1; i < head; i++) {\r\n        output = \"+!+[]\" + output;\r\n      }\r\n      if (head > 1) {\r\n        output = output.substr(1);\r\n      }\r\n\r\n      return [output]\r\n        .concat(values)\r\n        .join(\"+\")\r\n        .replace(/(\\d)/g, digitReplacer);\r\n    }\r\n\r\n    for (i = MIN; i <= MAX; i++) {\r\n      character = String.fromCharCode(i);\r\n      value = MAPPING[character];\r\n      if (!value) {\r\n        continue;\r\n      }\r\n      original = value;\r\n\r\n      for (key in CONSTRUCTORS) {\r\n        replace(\"\\\\b\" + key, CONSTRUCTORS[key] + '[\"constructor\"]');\r\n      }\r\n\r\n      for (key in SIMPLE) {\r\n        replace(key, SIMPLE[key]);\r\n      }\r\n\r\n      replace(\"(\\\\d\\\\d+)\", numberReplacer);\r\n      replace(\"\\\\((\\\\d)\\\\)\", digitReplacer);\r\n      replace(\"\\\\[(\\\\d)\\\\]\", digitReplacer);\r\n\r\n      replace(\"GLOBAL\", GLOBAL);\r\n      replace('\\\\+\"\"', \"+[]\");\r\n      replace('\"\"', \"[]+[]\");\r\n\r\n      MAPPING[character] = value;\r\n    }\r\n  }\r\n\r\n  function replaceStrings() {\r\n    // console.log(\"replaceStrings\")\r\n    var regEx = /[^\\[\\]\\(\\)\\!\\+]{1}/g, // var regEx = /[^\\[\\]\\(\\)\\!\\+\\{\\}]{1}/g,\r\n      all,\r\n      value,\r\n      missing,\r\n      count = MAX - MIN;\r\n\r\n    function findMissing() {\r\n      var all,\r\n        value,\r\n        done = false;\r\n\r\n      missing = {};\r\n\r\n      for (all in MAPPING) {\r\n        value = MAPPING[all];\r\n\r\n        if (value.match(regEx)) {\r\n          missing[all] = value;\r\n          done = true;\r\n        }\r\n      }\r\n\r\n      return done;\r\n    }\r\n\r\n    function mappingReplacer(a, b) {\r\n      return b.split(\"\").join(\"+\");\r\n    }\r\n\r\n    function valueReplacer(c) {\r\n      return missing[c] ? c : MAPPING[c];\r\n    }\r\n\r\n    for (all in MAPPING) {\r\n      MAPPING[all] = MAPPING[all].replace(/\\\"([^\\\"]+)\\\"/gi, mappingReplacer);\r\n    }\r\n\r\n    while (findMissing()) {\r\n      for (all in missing) {\r\n        value = MAPPING[all];\r\n        value = value.replace(regEx, valueReplacer);\r\n\r\n        MAPPING[all] = value;\r\n        missing[all] = value;\r\n      }\r\n\r\n      if (count-- === 0) {\r\n        var error = \"Could not compile the following chars:\";\r\n        console.error(\"Could not compile the following chars:\", missing);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n  var haveinit = 0;\r\n  function encode(input, wrapWithEval) {\r\n    if (haveinit === 0) {\r\n      fillMissingDigits();\r\n      fillMissingChars();\r\n      replaceMap();\r\n      replaceStrings();\r\n      haveinit = 1;\r\n    }\r\n\r\n    // console.log(\"encode\", input, wrapWithEval)\r\n    var output = [];\r\n\r\n    if (!input) {\r\n      return \"\";\r\n    }\r\n\r\n    var r = \"\";\r\n    for (var i in SIMPLE) {\r\n      r += i + \"|\";\r\n    }\r\n    r += \".\";\r\n\r\n    input.replace(new RegExp(r, \"g\"), function(c) {\r\n      // console.log(c)\r\n      var replacement = SIMPLE[c];\r\n      if (replacement) {\r\n        output.push(\"[\" + replacement + \"]+[]\");\r\n      } else {\r\n        replacement = MAPPING[c];\r\n        if (replacement) {\r\n          output.push(replacement);\r\n        } else {\r\n          // console.log(c)\r\n          if (c.charCodeAt(0) < 128) {\r\n            replacement =\r\n              \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\";\r\n          } else {\r\n            replacement =\r\n              \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\";\r\n          }\r\n          output.push(replacement);\r\n          MAPPING[c] = replacement;\r\n          // console.log(c,replacement)\r\n          /* \r\n                    if (c === \"J\") {\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(200000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(200000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n          \r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else if (c === \"O\") {\r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(24000000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(24000000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else {\r\n                      // console.log(c)\r\n                      // replacement1 =\r\n                      //   \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      //   \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      if (c.charCodeAt(0) < 128) {\r\n                        replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // console.log(replacement1.length,replacement.length)\r\n                      } else {\r\n                        replacement = \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      }\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      // replacement =encode(mytihuan)\r\n          \r\n                      // \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      // \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      // \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      // console.log(replacement)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } */\r\n        }\r\n      }\r\n    });\r\n\r\n    output = output.join(\"+\");\r\n\r\n    if (/^\\d$/.test(input)) {\r\n      output += \"+[]\";\r\n    }\r\n\r\n    if (wrapWithEval) {\r\n      output =\r\n        \"[][\" +\r\n        encode(\"filter\") +\r\n        \"]\" +\r\n        \"[\" +\r\n        encode(\"constructor\") +\r\n        \"]\" +\r\n        \"(\" +\r\n        output +\r\n        \")()\";\r\n      return output;\r\n    } else {\r\n      return \"(\" + output + \")\";\r\n    }\r\n  }\r\n\r\n  // fillMissingDigits();\r\n  // fillMissingChars();\r\n  // replaceMap();\r\n  // replaceStrings();\r\n\r\n  // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n  // fillMissingChars2();\r\n  // replaceMap();\r\n  // replaceStrings();\r\n  // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n  // self.JSFuck = {\r\n  //   encode: encode\r\n  // };\r\n  return global.JSFuck;\r\n})(\r\n  (typeof window !== \"undefined\" ? window : false) ||\r\n    (typeof WorkerGlobalScope !== \"undefined\" ? WorkerGlobalScope : false) ||\r\n    this\r\n);\r\n","/* var sum = 0\r\nfor (var i = 0; i < 128; i++) {\r\n    var c = String.fromCharCode(i);\r\n    var out = JSFuck.encode(c, true)\r\n    sum += out.length\r\n    console.log(i, c, out.length)\r\n}\r\nconsole.log(sum, sum / 128) */\r\n/** 旧版:测试结果表明使用webworker进行jsfuck反而更慢*/\r\nimport JSFuck from \"./jsfuck.js\";\r\n/** 新版:使用import JSFuck from \"./jsfuck.js\";后,测试结果表明使用webworker进行jsfuck速度更快*/\r\n// (() => {\r\nvar mymessagehandler = e => {\r\n  //   try {\r\n  //     console.log(JSFuck);\r\n  //   } catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // function globalimport(srciptsrc) {\r\n  //   importScripts(srciptsrc);\r\n  // }\r\n\r\n  var d = e.data;\r\n\r\n  console.log(\"副线程\" + \"从主线程接收\" + \"event.data\\n\");\r\n  console.log(...d);\r\n\r\n  // globalimport(d[2]);\r\n\r\n  // mui(document.getElementById(\"encode\")).button(\"loading\");\r\n  var output = JSFuck.encode(d[0], d[1]);\r\n  // $2(\"output\").value = output;\r\n  // $2(\"stats\").innerHTML = output.length + \" chars\";\r\n  // mui(document.getElementById(\"encode\")).button(\"reset\");\r\n  postMessage(output);\r\n};\r\naddEventListener(\"message\", mymessagehandler);\r\n// })();\r\n"]}