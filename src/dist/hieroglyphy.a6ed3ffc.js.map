{"version":3,"sources":["JSfuck-and-hieroglyphy-Decoder-and-ENCODER/hieroglyphy.js"],"names":["global","undefined","numbers","_Infinity","_1e100","_String","characters","functionConstructor","escape","unescape","API","getHexaString","number","digits","string","toString","length","getUnescapeSequence","charCode","hieroglyphyString","hieroglyphyCharacter","char","unescapeSequence","hexaSequence","shortestSequence","charCodeAt","getUnicodeSequence","getHexaSequence","str","i","hieroglyphiedStr","hieroglyphyScript","src","hieroglyphyNumber","n","window","hieroglyphy","define","amd","exports","module"],"mappings":"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","file":"hieroglyphy.a6ed3ffc.js","sourceRoot":"..","sourcesContent":[";(function(global, undefined) {\r\n    /*jshint sub:true, evil:true */\r\n    \"use strict\";\r\n    var numbers, _object_Object, _NaN, _true, _false, _undefined, _Infinity, _1e100, _String, characters, functionConstructor, escape, unescape, API;\r\n    API = {\r\n        hieroglyphyString: hieroglyphyString,\r\n        hieroglyphyNumber: hieroglyphyNumber,\r\n        hieroglyphyScript: hieroglyphyScript\r\n    };\r\n    window.hieroglyphy = API;\r\n    if (global.define && global.define.amd) {\r\n        global.define([], API);\r\n    } else if (typeof exports !== \"undefined\") {\r\n        module.exports = API;\r\n    } else {\r\n        global.hieroglyphy = API;\r\n    }\r\n\r\n    numbers = [\"+[]\", \"+!![]\", \"!+[]+!![]\", \"!+[]+!![]+!![]\", \"!+[]+!![]+!![]+!![]\", \"!+[]+!![]+!![]+!![]+!![]\", \"!+[]+!![]+!![]+!![]+!![]+!![]\", \"!+[]+!![]+!![]+!![]+!![]+!![]+!![]\", \"!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]\", \"!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]\"];\r\n\r\n    characters = {\r\n        \"0\": \"(\" + numbers[0] + \"+[])\",\r\n        \"1\": \"(\" + numbers[1] + \"+[])\",\r\n        \"2\": \"(\" + numbers[2] + \"+[])\",\r\n        \"3\": \"(\" + numbers[3] + \"+[])\",\r\n        \"4\": \"(\" + numbers[4] + \"+[])\",\r\n        \"5\": \"(\" + numbers[5] + \"+[])\",\r\n        \"6\": \"(\" + numbers[6] + \"+[])\",\r\n        \"7\": \"(\" + numbers[7] + \"+[])\",\r\n        \"8\": \"(\" + numbers[8] + \"+[])\",\r\n        \"9\": \"(\" + numbers[9] + \"+[])\"\r\n    };\r\n\r\n    _object_Object = \"[]+{}\";\r\n    _NaN = \"+{}+[]\";\r\n    _true = \"!![]+[]\";\r\n    _false = \"![]+[]\";\r\n    _undefined = \"[][[]]+[]\";\r\n\r\n    characters[\" \"] = \"(\" + _object_Object + \")[\" + numbers[7] + \"]\";\r\n    characters[\"[\"] = \"(\" + _object_Object + \")[\" + numbers[0] + \"]\";\r\n    characters[\"]\"] = \"(\" + _object_Object + \")[\" + characters[1] + \"+\" + characters[4] + \"]\";\r\n    characters[\"a\"] = \"(\" + _NaN + \")[\" + numbers[1] + \"]\";\r\n    characters[\"b\"] = \"(\" + _object_Object + \")[\" + numbers[2] + \"]\";\r\n    characters[\"c\"] = \"(\" + _object_Object + \")[\" + numbers[5] + \"]\";\r\n    characters[\"d\"] = \"(\" + _undefined + \")[\" + numbers[2] + \"]\";\r\n    characters[\"e\"] = \"(\" + _undefined + \")[\" + numbers[3] + \"]\";\r\n    characters[\"f\"] = \"(\" + _false + \")[\" + numbers[0] + \"]\";\r\n    characters[\"i\"] = \"(\" + _undefined + \")[\" + numbers[5] + \"]\";\r\n    characters[\"j\"] = \"(\" + _object_Object + \")[\" + numbers[3] + \"]\";\r\n    characters[\"l\"] = \"(\" + _false + \")[\" + numbers[2] + \"]\";\r\n    characters[\"n\"] = \"(\" + _undefined + \")[\" + numbers[1] + \"]\";\r\n    characters[\"o\"] = \"(\" + _object_Object + \")[\" + numbers[1] + \"]\";\r\n    characters[\"r\"] = \"(\" + _true + \")[\" + numbers[1] + \"]\";\r\n    characters[\"s\"] = \"(\" + _false + \")[\" + numbers[3] + \"]\";\r\n    characters[\"t\"] = \"(\" + _true + \")[\" + numbers[0] + \"]\";\r\n    characters[\"u\"] = \"(\" + _undefined + \")[\" + numbers[0] + \"]\";\r\n    characters[\"N\"] = \"(\" + _NaN + \")[\" + numbers[0] + \"]\";\r\n    characters[\"O\"] = \"(\" + _object_Object + \")[\" + numbers[8] + \"]\";\r\n\r\n    _String = \"[]+\" + \"(\" + _object_Object + \")\" + \"[\" + hieroglyphyString(\"constructor\") + \"]\";\r\n    // \"â€Œfunction String() { [native code] }\"\r\n\r\n    characters[\"S\"] = \"(\" + _String + \")\" + \"[\" + numbers[9] + \"]\";\r\n    characters[\"g\"] = \"(\" + _String + \")\" + \"[\" + \"(\" + numbers[7] + \")\" + \"+\" + \"(\" + numbers[7] + \")\" + \"]\";\r\n\r\n    _Infinity = \"+(\" + numbers[1] + \"+\" + characters[\"e\"] + \"+\" + characters[1] + \"+\" + characters[0] + \"+\" + characters[0] + \"+\" + characters[0] + \")+[]\";\r\n\r\n    characters[\"y\"] = \"(\" + _Infinity + \")[\" + numbers[7] + \"]\";\r\n    characters[\"I\"] = \"(\" + _Infinity + \")[\" + numbers[0] + \"]\";\r\n\r\n    _1e100 = \"+(\" + numbers[1] + \"+\" + characters[\"e\"] + \"+\" + characters[1] + \"+\" + characters[0] + \"+\" + characters[0] + \")+[]\";\r\n\r\n    characters[\"+\"] = \"(\" + _1e100 + \")[\" + numbers[2] + \"]\";\r\n\r\n    functionConstructor = \"[][\" + hieroglyphyString(\"sort\") + \"][\" + hieroglyphyString(\"constructor\") + \"]\";\r\n\r\n    //Below characters need _String\r\n    characters[\"h\"] = \"(\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[8] + \")\" + \")\" + \"[\" + hieroglyphyString(\"toString\") + \"]\" + \"(\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[9] + \")\" + \")\";\r\n    characters[\"p\"] = \"(\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[7] + \")\" + \")\" + \"[\" + hieroglyphyString(\"toString\") + \"]\" + \"(\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[9] + \")\" + \"+\" + \"(\" + numbers[8] + \")\" + \")\";\r\n\r\n    unescape = hieroglyphyScript(\"return unescape\");\r\n    escape = hieroglyphyScript(\"return escape\");\r\n\r\n    characters[\"%\"] = escape + \"(\" + hieroglyphyString(\"[\") + \")[\" + numbers[0] + \"]\";\r\n\r\n    //'{': '(NaN+[][\"filter\"])[21]',\r\n    // '}': '(NaN+[][\"filter\"])[37]',\r\n    characters[\"{\"] = \"(\" + _NaN + \"+[][\" + hieroglyphyString(\"filter\") + \"])[\" + characters[2] + \"+\" + characters[1] + \"]\";\r\n    characters[\"}\"] = \"(\" + _NaN + \"+[][\" + hieroglyphyString(\"filter\") + \"])[\" + characters[3] + \"+\" + characters[7] + \"]\";\r\n\r\n    function getHexaString(number, digits) {\r\n        var string = number.toString(16);\r\n\r\n        while (string.length < digits) {\r\n            string = \"0\" + string;\r\n        }\r\n\r\n        return string;\r\n    }\r\n\r\n    function getUnescapeSequence(charCode) {\r\n        return unescape + \"(\" + hieroglyphyString(\"%\" + getHexaString(charCode, 2)) + \")\";\r\n    }\r\n\r\n    function getHexaSequence(charCode) {\r\n        return hieroglyphyString(\"\\\\x\" + getHexaString(charCode, 2));\r\n    }\r\n\r\n    function getUnicodeSequence(charCode) {\r\n        return hieroglyphyString(\"\\\\u\" + getHexaString(charCode, 4));\r\n    }\r\n\r\n    function hieroglyphyCharacter(char) {\r\n        var charCode = char.charCodeAt(0), unescapeSequence, hexaSequence, unicodeSequence, shortestSequence;\r\n\r\n        if (characters[char] !== undefined) {\r\n            return characters[char];\r\n        }\r\n\r\n        if ((char === \"\\\\\") || (char == \"x\")) {\r\n            //These chars must be handled appart becuase the others need them\r\n            characters[char] = getUnescapeSequence(charCode);\r\n            // console.log(characters[char])\r\n            return characters[char];\r\n        }\r\n\r\n        shortestSequence = getUnicodeSequence(charCode);\r\n\r\n        //ASCII characters can be obtained with hexa and unscape sequences\r\n        if (charCode < 128) {\r\n            unescapeSequence = getUnescapeSequence(charCode);\r\n            if (shortestSequence.length > unescapeSequence.length) {\r\n                shortestSequence = unescapeSequence;\r\n            }\r\n\r\n            hexaSequence = getHexaSequence(charCode);\r\n            if (shortestSequence.length > hexaSequence.length) {\r\n                shortestSequence = hexaSequence;\r\n            }\r\n        }\r\n        // console.log(char, getUnicodeSequence(charCode).length, getUnescapeSequence(charCode).length, getHexaSequence(charCode).length)\r\n        characters[char] = shortestSequence;\r\n        // if(!(charCode < 128)){\r\n        //     // console.log(char)\r\n        //     console.log(shortestSequence)\r\n        // }\r\n\r\n        return shortestSequence;\r\n    }\r\n\r\n    function hieroglyphyString(str) {\r\n        var i, hieroglyphiedStr = \"\";\r\n\r\n        for (i = 0; i < str.length; i += 1) {\r\n\r\n            hieroglyphiedStr += (i > 0) ? \"+\" : \"\";\r\n            hieroglyphiedStr += hieroglyphyCharacter(str[i]);\r\n        }\r\n\r\n        return hieroglyphiedStr;\r\n    }\r\n\r\n    function hieroglyphyNumber(n) {\r\n        n = +n;\r\n\r\n        if (n <= 9) {\r\n            return numbers[n];\r\n        }\r\n\r\n        return \"+(\" + hieroglyphyString(n.toString(10)) + \")\";\r\n    }\r\n\r\n    function hieroglyphyScript(src) {\r\n        return functionConstructor + \"(\" + hieroglyphyString(src) + \")()\";\r\n    }\r\n\r\n}\r\n)(this);\r\n"]}