{"version":3,"sources":["花密网页版-完善修改版-响应式的导航栏-20190412/md5.js"],"names":["$","safe_add","x","y","lsw","msw","md5_cmn","q","a","b","s","t","num","cnt","bit_rol","md5_ff","c","d","md5_gg","md5_hh","md5_ii","binl_md5","len","i","olda","oldb","oldc","oldd","length","binl2rstr","input","output","String","fromCharCode","rstr2binl","undefined","charCodeAt","rstr2hex","hex_tab","charAt","str2rstr_utf8","unescape","encodeURIComponent","raw_md5","rstr_md5","raw_hmac_md5","k","rstr_hmac_md5","key","data","hash","bkey","ipad","opad","concat","md5","string","raw","jQuery"],"mappings":"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","file":"md5.58fe831e.js","sourceRoot":"..","sourcesContent":["/*\n * jQuery MD5 Plugin 1.2.1\n * https://github.com/blueimp/jQuery-MD5\n *\n * Copyright 2010, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * http://creativecommons.org/licenses/MIT/\n * \n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*jslint bitwise: true */\n/*global unescape, jQuery */\n\n(function($) {\n    'use strict';\n\n    /*\n\t * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t * to work around bugs in some JS interpreters.\n\t */\n    function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n          , msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n\n    /*\n\t * Bitwise rotate a 32-bit number to the left.\n\t */\n    function bit_rol(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n\n    /*\n\t * These functions implement the four basic operations the algorithm uses.\n\t */\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    /*\n\t * Calculate the MD5 of an array of little-endian words, and a bit length.\n\t */\n    function binl_md5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var i, olda, oldb, oldc, oldd, a = 1732584193, b = -271733879, c = -1732584194, d = 271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    }\n\n    /*\n\t * Convert an array of little-endian words to a string\n\t */\n    function binl2rstr(input) {\n        var i, output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n    }\n\n    /*\n\t * Convert a raw string to an array of little-endian words\n\t * Characters >255 have their high-byte silently ignored.\n\t */\n    function rstr2binl(input) {\n        var i, output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        }\n        return output;\n    }\n\n    /*\n\t * Calculate the MD5 of a raw string\n\t */\n    function rstr_md5(s) {\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n    }\n\n    /*\n\t * Calculate the HMAC-MD5, of a key and some data (raw strings)\n\t */\n    function rstr_hmac_md5(key, data) {\n        var i, bkey = rstr2binl(key), ipad = [], opad = [], hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n    }\n\n    /*\n\t * Convert a raw string to a hex string\n\t */\n    function rstr2hex(input) {\n        var hex_tab = '0123456789abcdef', output = '', x, i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    }\n\n    /*\n\t * Encode a string as utf-8\n\t */\n    function str2rstr_utf8(input) {\n        return unescape(encodeURIComponent(input));\n    }\n\n    /*\n\t * Take string arguments and return either raw or hex encoded strings\n\t */\n    function raw_md5(s) {\n        return rstr_md5(str2rstr_utf8(s));\n    }\n\n    function hex_md5(s) {\n        return rstr2hex(raw_md5(s));\n    }\n\n    function raw_hmac_md5(k, d) {\n        return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));\n    }\n\n    function hex_hmac_md5(k, d) {\n        return rstr2hex(raw_hmac_md5(k, d));\n    }\n\n    $.md5 = function(string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return hex_md5(string);\n            } else {\n                return raw_md5(string);\n            }\n        }\n        if (!raw) {\n            return hex_hmac_md5(key, string);\n        } else {\n            return raw_hmac_md5(key, string);\n        }\n    }\n    ;\n\n}(typeof jQuery === 'function' ? jQuery : this));\n"]}