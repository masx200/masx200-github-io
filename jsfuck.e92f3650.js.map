{"version":3,"sources":["JSfuck-and-hieroglyphy-Decoder-and-ENCODER/jsfuck.js"],"names":["self","exports","window","JSFuck","encode","USE_CHAR_CODE","MIN","MAX","SIMPLE","CONSTRUCTORS","MAPPING","GLOBAL","input","wrapWithEval","output","r","i","replace","RegExp","c","replacement","push","charCodeAt","toString","join","test","fillMissingDigits","number","substr","fillMissingChars","key","replaceMap","character","value","pattern","digitReplacer","_","x","numberReplacer","y","values","split","head","shift","concat","String","fromCharCode","replaceStrings","regEx","all","missing","count","findMissing","done","match","mappingReplacer","a","b","valueReplacer","error","console"],"mappings":"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","file":"jsfuck.e92f3650.js","sourceRoot":"..","sourcesContent":["/*! JSFuck 0.4.0 - http://jsfuck.com */\r\n\r\n(function (self) {\r\n    self.JSFuck = {\r\n        encode: encode\r\n    };\r\n    window.JSFuck = { encode: encode };\r\n    var USE_CHAR_CODE = \"USE_CHAR_CODE\";\r\n\r\n    var MIN = 32, MAX = 126;\r\n\r\n    var SIMPLE = {\r\n        'false': '![]',\r\n        'true': '!![]',\r\n        'undefined': '[][[]]',\r\n        'NaN': '+[![]]',\r\n        'Infinity': '+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]]+[+[]])' // +\"1e1000\"\r\n    };\r\n\r\n    var CONSTRUCTORS = {\r\n        'Array': '[]',\r\n        'Number': '(+[])',\r\n        'String': '([]+[])',\r\n        'Boolean': '(![])',\r\n        'Function': '[][\"filter\"]',\r\n        'RegExp': 'Function(\"return/0/\")()'\r\n    };\r\n\r\n    var MAPPING = {\r\n        'a': '(false+\"\")[1]',\r\n        'b': '(+(11))[\"toString\"](20)',\r\n        'c': '([][\"filter\"]+\"\")[3]',\r\n        'd': '(undefined+\"\")[2]',\r\n        'e': '(true+\"\")[3]',\r\n        'f': '(false+\"\")[0]',\r\n        'g': '(+false+[false]+String)[20]',\r\n        'h': '(+(101))[\"toString\"](21)[1]',\r\n        'i': '([false]+undefined)[10]',\r\n        'j': '(+(40))[\"toString\"](21)[1]',\r\n        'k': '(+(20))[\"toString\"](21)',\r\n        'l': '(false+\"\")[2]',\r\n        'm': '(Number+\"\")[11]',\r\n        'n': '(undefined+\"\")[1]',\r\n        'o': '(true+[][\"filter\"])[10]',\r\n        'p': '(+(211))[\"toString\"](31)[1]',\r\n        'q': '(+(212))[\"toString\"](31)[1]',\r\n        'r': '(true+\"\")[1]',\r\n        's': '(false+\"\")[3]',\r\n        't': '(true+\"\")[0]',\r\n        'u': '(undefined+\"\")[0]',\r\n        'v': '(+(31))[\"toString\"](32)',\r\n        'w': '(+(32))[\"toString\"](33)',\r\n        'x': '(+(101))[\"toString\"](34)[1]',\r\n        'y': '(NaN+[Infinity])[10]',\r\n        'z': '(+(35))[\"toString\"](36)',\r\n\r\n        'A': '(+false+Array)[10]',\r\n        'B': '(+false+Boolean)[10]',\r\n        'C': 'Function(\"return escape\")()(\"<\")[2]',\r\n        'D': 'Function(\"return escape\")()(\"=\")[2]',\r\n        'E': '(RegExp+\"\")[12]',\r\n        'F': '(+false+Function)[10]',\r\n        'G': '(false+Function(\"return Date\")()())[30]',\r\n        'H': USE_CHAR_CODE,\r\n        'I': '(Infinity+\"\")[0]',\r\n        'J': USE_CHAR_CODE,\r\n        'K': USE_CHAR_CODE,\r\n        'L': USE_CHAR_CODE,\r\n        'M': '(true+Function(\"return Date\")()())[30]',\r\n        'N': '(NaN+\"\")[0]',\r\n        'O': USE_CHAR_CODE,\r\n        'P': USE_CHAR_CODE,\r\n        'Q': USE_CHAR_CODE,\r\n        'R': '(+false+RegExp)[10]',\r\n        'S': '(+false+String)[10]',\r\n        'T': '(NaN+Function(\"return Date\")()())[30]',\r\n        'U': USE_CHAR_CODE,\r\n        'V': USE_CHAR_CODE,\r\n        'W': USE_CHAR_CODE,\r\n        'X': USE_CHAR_CODE,\r\n        'Y': USE_CHAR_CODE,\r\n        'Z': USE_CHAR_CODE,\r\n\r\n        ' ': '(NaN+[][\"filter\"])[11]',\r\n        '!': USE_CHAR_CODE,\r\n        '\"': '(\"\")[\"fontcolor\"]()[12]',\r\n        '#': USE_CHAR_CODE,\r\n        '$': USE_CHAR_CODE,\r\n        '%': 'Function(\"return escape\")()(\"<\")[0]',\r\n        '&': USE_CHAR_CODE,\r\n        '\\'': USE_CHAR_CODE,\r\n\r\n        '(': '(false+[][\"filter\"])[20]',\r\n        ')': '(true+[][\"filter\"])[20]',\r\n        '*': USE_CHAR_CODE,\r\n        '+': '(+(+!+[]+(!+[]+[])[!+[]+!+[]+!+[]]+[+!+[]]+[+[]]+[+[]])+[])[2]',\r\n        ',': '[[]][\"concat\"]([[]])+\"\"',\r\n        '-': '(+(.+[0000000001])+\"\")[2]',\r\n        '.': '(+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]',\r\n        '/': '(false+[+false])[\"italics\"]()[10]',\r\n        ':': '(RegExp()+\"\")[3]',\r\n        ';': USE_CHAR_CODE,\r\n        '<': '(\"\")[\"italics\"]()[0]',\r\n        '=': '(\"\")[\"fontcolor\"]()[11]',\r\n        '>': '(\"\")[\"italics\"]()[2]',\r\n        '?': '(RegExp()+\"\")[2]',\r\n        '@': USE_CHAR_CODE,\r\n        '[': '(GLOBAL+\"\")[0]',\r\n        '\\\\': USE_CHAR_CODE,\r\n\r\n        //  '\\\\': `( [][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37]+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+(NaN+[][\"filter\"])[21](NaN+[][\"filter\"])[37])[!+[]+!![]+!![]+!![]+!![]]))[0]`  ,\r\n\r\n\r\n\r\n        ']': USE_CHAR_CODE,\r\n        '^': USE_CHAR_CODE,\r\n        '_': USE_CHAR_CODE,\r\n        '`': USE_CHAR_CODE,\r\n        '{': '(NaN+[][\"filter\"])[21]',\r\n        // '{': '([][\"filter\"]+[])[18]',\r\n        '|': USE_CHAR_CODE,\r\n        '}': USE_CHAR_CODE,\r\n        '}': '(NaN+[][\"filter\"])[37]',\r\n        '~': USE_CHAR_CODE\r\n    };\r\n\r\n    var GLOBAL = 'Function(\"return this\")()';\r\n\r\n    function fillMissingChars() {\r\n        // console.log(\"fillMissingChars\")\r\n        // console.log(MAPPING)\r\n        for (var key in MAPPING) {\r\n            // console.log(key,MAPPING[key])\r\n            if (MAPPING[key] === USE_CHAR_CODE) {\r\n                // console.log(key,MAPPING[key])\r\n\r\n                // if (key === '\\\\') {\r\n                MAPPING[key] = 'Function(\"return unescape\")()(\"%\"' + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\")';\r\n                // console.log(key,MAPPING[key],MAPPING[key].length)\r\n                //  MAPPING[key] ='( [][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(+{}+[])[+!![]]+((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]))[(!![]+[])[+[]]+([]+{})[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([][[]]+[])[+!![]]+([]+([]+{})[([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]])[(!+[]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![])]]((!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+!![])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]))+([][[]]+[])[!+[]+!![]+!![]])()(([]+{})[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+([]+{})[!+[]+!![]+!![]+!![]+!![]]))'\r\n                // } else {\r\n                //   MAPPING[key] = '(\\\\u00' + key.charCodeAt(0).toString(16) + ')';\r\n                // }\r\n                // console.log(key, MAPPING[key])\r\n                // MAPPING[key] = 'Function(\"return unescape\")()(\"%\"' + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\")';\r\n                // console.log(key, MAPPING[key])\r\n                // mykey1 = `(unescape(\"%` + key.charCodeAt(0).toString(16).replace(/(\\d+)/g, \"+($1)+\\\"\") + '\"))';\r\n                // MAPPING[key] = mykey1\r\n                // // MAPPING[key] = \"\\\\u\"+ key.charCodeAt(0).toString(16);\r\n                // // MAPPING[key] =  'unescape(\"%'+key.charCodeAt(0).toString(16)+'\")'\r\n                // console.log(key, mykey1)\r\n                // mykey1=\"(\" + encode(\"\\\\u00\" + key.charCodeAt(0).toString(16)) + \")\"\r\n                // console.log(mykey1.length,MAPPING[key].length)\r\n            }\r\n            // console.log(key,MAPPING[key],MAPPING[key].length)\r\n        }\r\n\r\n        // console.log(MAPPING)\r\n    }\r\n\r\n    function fillMissingDigits() {\r\n        // console.log(\"fillMissingDigits\")\r\n        var output, number, i;\r\n\r\n        for (number = 0; number < 10; number++) {\r\n\r\n            output = \"+[]\";\r\n\r\n            if (number > 0) { output = \"+!\" + output; }\r\n            for (i = 1; i < number; i++) { output = \"+!+[]\" + output; }\r\n            if (number > 1) { output = output.substr(1); }\r\n\r\n            MAPPING[number] = \"[\" + output + \"]\";\r\n            // console.log(number,MAPPING[number])\r\n        }\r\n    }\r\n\r\n    function replaceMap() {\r\n        // console.log(\"replaceMap\")\r\n        var character = \"\", value, original, i, key;\r\n\r\n        function replace(pattern, replacement) {\r\n            value = value.replace(\r\n                new RegExp(pattern, \"gi\"),\r\n                replacement\r\n            );\r\n        }\r\n\r\n        function digitReplacer(_, x) { return MAPPING[x]; }\r\n\r\n        function numberReplacer(_, y) {\r\n            var values = y.split(\"\");\r\n            var head = +(values.shift());\r\n            var output = \"+[]\";\r\n\r\n            if (head > 0) { output = \"+!\" + output; }\r\n            for (i = 1; i < head; i++) { output = \"+!+[]\" + output; }\r\n            if (head > 1) { output = output.substr(1); }\r\n\r\n            return [output].concat(values).join(\"+\").replace(/(\\d)/g, digitReplacer);\r\n        }\r\n\r\n        for (i = MIN; i <= MAX; i++) {\r\n            character = String.fromCharCode(i);\r\n            value = MAPPING[character];\r\n            if (!value) { continue; }\r\n            original = value;\r\n\r\n            for (key in CONSTRUCTORS) {\r\n                replace(\"\\\\b\" + key, CONSTRUCTORS[key] + '[\"constructor\"]');\r\n            }\r\n\r\n            for (key in SIMPLE) {\r\n                replace(key, SIMPLE[key]);\r\n            }\r\n\r\n            replace('(\\\\d\\\\d+)', numberReplacer);\r\n            replace('\\\\((\\\\d)\\\\)', digitReplacer);\r\n            replace('\\\\[(\\\\d)\\\\]', digitReplacer);\r\n\r\n            replace(\"GLOBAL\", GLOBAL);\r\n            replace('\\\\+\"\"', \"+[]\");\r\n            replace('\"\"', \"[]+[]\");\r\n\r\n            MAPPING[character] = value;\r\n        }\r\n    }\r\n\r\n    function replaceStrings() {\r\n        // console.log(\"replaceStrings\")\r\n        var regEx = /[^\\[\\]\\(\\)\\!\\+]{1}/g,\r\n            // var regEx = /[^\\[\\]\\(\\)\\!\\+\\{\\}]{1}/g,  \r\n            all, value, missing,\r\n            count = MAX - MIN;\r\n\r\n        function findMissing() {\r\n            var all, value, done = false;\r\n\r\n            missing = {};\r\n\r\n            for (all in MAPPING) {\r\n\r\n                value = MAPPING[all];\r\n\r\n                if (value.match(regEx)) {\r\n                    missing[all] = value;\r\n                    done = true;\r\n                }\r\n            }\r\n\r\n            return done;\r\n        }\r\n\r\n        function mappingReplacer(a, b) {\r\n            return b.split(\"\").join(\"+\");\r\n        }\r\n\r\n        function valueReplacer(c) {\r\n            return missing[c] ? c : MAPPING[c];\r\n        }\r\n\r\n        for (all in MAPPING) {\r\n            MAPPING[all] = MAPPING[all].replace(/\\\"([^\\\"]+)\\\"/gi, mappingReplacer);\r\n        }\r\n\r\n        while (findMissing()) {\r\n            for (all in missing) {\r\n                value = MAPPING[all];\r\n                value = value.replace(regEx, valueReplacer);\r\n\r\n                MAPPING[all] = value;\r\n                missing[all] = value;\r\n            }\r\n\r\n            if (count-- === 0) {\r\n                error = \"Could not compile the following chars:\"\r\n                console.error(\"Could not compile the following chars:\", missing);\r\n                throw error\r\n            }\r\n        }\r\n    }\r\n\r\n    function encode(input, wrapWithEval) {\r\n        // console.log(\"encode\", input, wrapWithEval)\r\n        var output = [];\r\n\r\n        if (!input) {\r\n            return \"\";\r\n        }\r\n\r\n        var r = \"\";\r\n        for (var i in SIMPLE) {\r\n            r += i + \"|\";\r\n        }\r\n        r += \".\";\r\n\r\n        input.replace(new RegExp(r, 'g'), function (c) {\r\n            // console.log(c)\r\n            var replacement = SIMPLE[c];\r\n            if (replacement) {\r\n                output.push(\"[\" + replacement + \"]+[]\");\r\n            } else {\r\n                replacement = MAPPING[c];\r\n                if (replacement) {\r\n                    output.push(replacement);\r\n                } else {\r\n                    // console.log(c)\r\n                    if (c.charCodeAt(0) < 128) {\r\n                        replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n\r\n                    } else {\r\n                        replacement = \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                    }\r\n                    output.push(replacement);\r\n                    MAPPING[c] = replacement;\r\n                    // console.log(c,replacement)\r\n                    /* \r\n                    if (c === \"J\") {\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(200000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(200000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n          \r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else if (c === \"O\") {\r\n                      replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      // replacement1 =\r\n                      //   \"([][\" + encode(\"filter\") + \"]\" +\r\n                      //   \"[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"(\" + encode(\"return new Date(24000000000)\") + \")()+[])[!+[]+!+[]+!+[]+!+[]]\";\r\n                      // replacement = (([] + new Date(24000000000))[4])\r\n          \r\n                      // replacement=\"(\"+ encode(\"\\\\u00\"+c.charCodeAt(0).toString(16))+\")\"\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } else {\r\n                      // console.log(c)\r\n                      // replacement1 =\r\n                      //   \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      //   \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      //   \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      if (c.charCodeAt(0) < 128) {\r\n                        replacement = \"(\" + encode(\"\\\\u00\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // replacement1 = \"(\" + encode(\"\\\\x\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                        // console.log(replacement1.length,replacement.length)\r\n                      } else {\r\n                        replacement = \"(\" + encode(\"\\\\u\" + c.charCodeAt(0).toString(16)) + \")\"\r\n                      }\r\n                      // console.log(replacement1.length,replacement.length)\r\n                      // replacement =encode(mytihuan)\r\n          \r\n                      // \"([]+[])[\" + encode(\"constructor\") + \"]\" +\r\n                      // \"[\" + encode(\"fromCharCode\") + \"]\" +\r\n                      // \"(\" + encode(c.charCodeAt(0) + \"\") + \")\";\r\n                      // console.log(replacement)\r\n                      output.push(replacement);\r\n                      MAPPING[c] = replacement;\r\n                    } */\r\n                }\r\n            }\r\n        });\r\n\r\n        output = output.join(\"+\");\r\n\r\n        if (/^\\d$/.test(input)) {\r\n            output += \"+[]\";\r\n        }\r\n\r\n        if (wrapWithEval) {\r\n            output = \"[][\" + encode(\"filter\") + \"]\" +\r\n                \"[\" + encode(\"constructor\") + \"]\" +\r\n                \"(\" + output + \")()\";\r\n            return output\r\n        } else {\r\n            return '(' + output + ')';\r\n        }\r\n\r\n\r\n    }\r\n\r\n    fillMissingDigits();\r\n    fillMissingChars();\r\n    replaceMap();\r\n    replaceStrings();\r\n\r\n    // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n    // fillMissingChars2();\r\n    // replaceMap();\r\n    // replaceStrings();\r\n    // for (var key in MAPPING) console.log(key,MAPPING[key].length)\r\n    // self.JSFuck = {\r\n    //   encode: encode\r\n    // };\r\n})(typeof (exports) === \"undefined\" ? window : exports);\r\n"]}